Arguments: 
  C:\Program Files\nodejs\node.exe C:\Program Files\nodejs\node_modules\yarn\bin\yarn.js install

PATH: 
  C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\marci\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\Docker\Docker\resources\bin;C:\Python27\;C:\Users\marci\AppData\Local\Microsoft\WindowsApps;C:\Users\marci\AppData\Roaming\npm;C:\Users\marci\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\marci\AppData\Roaming\nvm;C:\Program Files\nodejs;

Yarn version: 
  1.22.19

Node version: 
  20.9.0

Platform: 
  win32 x64

Trace: 
  Error: https://registry.yarnpkg.com/rxjs/-/rxjs-7.8.1.tgz: ESOCKETTIMEDOUT
      at ClientRequest.<anonymous> (C:\Users\marci\AppData\Roaming\nvm\v20.9.0\node_modules\yarn\lib\cli.js:141517:19)
      at Object.onceWrapper (node:events:628:28)
      at ClientRequest.emit (node:events:514:28)
      at TLSSocket.emitRequestTimeout (node:_http_client:840:9)
      at Object.onceWrapper (node:events:628:28)
      at TLSSocket.emit (node:events:526:35)
      at Socket._onTimeout (node:net:589:8)
      at listOnTimeout (node:internal/timers:573:17)
      at process.processTimers (node:internal/timers:514:7)

npm manifest: 
  {
    "name": "ddd-forum",
    "version": "1.0.0",
    "description": "Learn how to build a hacker news-type app with TypeScript & DDD",
    "main": "index.js",
    "scripts": {
      "build:public": "cd public/app && npm install && npm run build",
      "start:public": "cd public/app && npm run start",
      "build": "rimraf ./dist && tsc",
      "db:create:dev": "cross-env NODE_ENV=development node scripts/db/create",
      "db:create:test": "cross-env NODE_ENV=test node scripts/db/create",
      "db:delete:dev": "cross-env NODE_ENV=development node scripts/db/delete",
      "db:delete:test": "cross-env NODE_ENV=test node scripts/db/delete",
      "db:flush:dev": "cross-env NODE_ENV=development npm run db:delete:dev && npm run db:create:dev",
      "db:flush:test": "cross-env NODE_ENV=test npm run db:delete:test && npm run db:create:test",
      "migrate:dev": "npm run build && cross-env NODE_ENV=development dotenv -e .env sequelize db:migrate",
      "migrate:test": "npm run build && cross-env NODE_ENV=test dotenv -e .env sequelize db:migrate --env test",
      "migrate:prod": "sequelize db:migrate --env production",
      "setup:dev": "npm install && npm run db:create:dev && npm run migrate:dev",
      "start:dev": "cross-env NODE_ENV=development nodemon",
      "start:both": "concurrently --kill-others-on-fail \"npm run start:dev\" \"npm run  start:public\"",
      "prestart": "npm run migrate:prod",
      "start": "node dist/index",
      "test": "jest",
      "test:dev": "jest --watchAll",
      "testWithCoverage": "jest --coverage --coverageReporters=\"text\" --coverageReporters=\"html\" --coverageReporters=\"json\"",
      "test:api": "npm run db:delete:dev && npm run db:create:dev && npm run migrate:dev && jest --coverage --coverageReporters=\"html\" --runInBand --testPathPattern=api"
    },
    "husky": {
      "hooks": {
        "pre-commit": "npm run build",
        "pre-push": "npm run build"
      }
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/stemmlerjs/ddd-forum.git"
    },
    "keywords": [
      "ddd",
      "typescript"
    ],
    "author": "Khalil Stemmler <khalil@khalilstemmler.com>",
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/stemmlerjs/ddd-forum/issues"
    },
    "homepage": "https://github.com/stemmlerjs/ddd-forum#readme",
    "dependencies": {
      "@types/express": "^4.17.1",
      "@types/jest": "^29.5.6",
      "@types/lodash": "^4.14.200",
      "apollo-server-express": "^2.11.0",
      "axios": "^1.6.0",
      "bcrypt-nodejs": "0.0.3",
      "body-parser": "^1.20.2",
      "compression": "^1.7.4",
      "cors": "^2.8.5",
      "dompurify": "^3.0.6",
      "dotenv": "^15.0.1",
      "express": "^4.18.2",
      "express-rate-limit": "^7.1.3",
      "graphql-iso-date": "^3.6.1",
      "helmet": "^7.0.0",
      "jest": "^29.7.0",
      "jsdom": "^22.1.0",
      "jsonwebtoken": "^9.0.2",
      "lodash": "^4.17.21",
      "morgan": "^1.10.0",
      "mysql2": "^3.6.2",
      "nodemon": "^3.0.1",
      "rand-token": "^1.0.1",
      "react-quill": "^0.0.2",
      "redis": "^3.1.2",
      "rimraf": "^5.0.5",
      "sequelize": "^6.34.0",
      "sequelize-cli": "^6.6.1",
      "sinon": "^17.0.0",
      "sinon-chai": "^3.7.0",
      "slug": "^8.2.3",
      "ts-jest": "^29.1.1",
      "ts-node": "^10.9.1",
      "tslog": "^3.3.4",
      "typescript": "^5.2.2",
      "validator": "^13.11.0",
      "yaml": "^2.3.3"
    },
    "devDependencies": {
      "concurrently": "^8.2.2",
      "cross-env": "^7.0.3",
      "dotenv-cli": "^7.3.0",
      "husky": "^8.0.3",
      "jest-html-reporter": "^3.10.2",
      "react-loader-spinner": "^5.4.5",
      "react-redux": "^8.1.3",
      "react-router-dom": "^6.18.0",
      "react-scripts": "^3.0.1",
      "react-toastify": "^9.1.3",
      "redux": "^4.2.1",
      "redux-thunk": "^2.4.2"
    },
    "jest": {
      "testEnvironment": "node",
      "transform": {
        "^.+\\.ts?$": "ts-jest"
      },
      "testRegex": "./src/.*\\.(test|spec)?\\.(ts|ts)$",
      "coverageReporters": [
        "json",
        "lcov",
        "text",
        "clover"
      ],
      "coverageDirectory": "coverage",
      "collectCoverage": true,
      "collectCoverageFrom": [
        "src/**/*.ts"
      ],
      "coveragePathIgnorePatterns": [
        "/node_modules/"
      ],
      "reporters": [
        "default",
        [
          "jest-html-reporter",
          {
            "pageTitle": "Test Report",
            "expand": true
          }
        ]
      ],
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "jsx",
        "json",
        "node"
      ],
      "testPathIgnorePatterns": [
        "/node_modules/",
        "/dist/"
      ],
      "roots": [
        "<rootDir>/src"
      ]
    }
  }

yarn manifest: 
  No manifest

Lockfile: 
  No lockfile
